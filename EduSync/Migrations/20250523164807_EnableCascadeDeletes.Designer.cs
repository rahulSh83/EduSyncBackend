// <auto-generated />
using System;
using EduSync.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduSync.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250523164807_EnableCascadeDeletes")]
    partial class EnableCascadeDeletes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduSync.Models.AssessmentModel", b =>
                {
                    b.Property<Guid>("AssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("MaxScore")
                        .HasColumnType("int");

                    b.Property<string>("Questions")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AssessmentId");

                    b.HasIndex("CourseId");

                    b.ToTable("AssessmentModel", (string)null);
                });

            modelBuilder.Entity("EduSync.Models.CourseModel", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid?>("InstructorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MediaUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("CourseModel", (string)null);
                });

            modelBuilder.Entity("EduSync.Models.EnrollmentModel", b =>
                {
                    b.Property<Guid>("EnrollmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EnrolledOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("EnrollmentModel", (string)null);
                });

            modelBuilder.Entity("EduSync.Models.ResultModel", b =>
                {
                    b.Property<Guid>("ResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssessmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AttemptDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ResultId");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("UserId");

                    b.ToTable("ResultModel", (string)null);
                });

            modelBuilder.Entity("EduSync.Models.UserModel", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Role")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("UserModel", (string)null);
                });

            modelBuilder.Entity("EduSync.Models.AssessmentModel", b =>
                {
                    b.HasOne("EduSync.Models.CourseModel", "Course")
                        .WithMany("AssessmentModels")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_AssessmentModel_CourseModel");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduSync.Models.CourseModel", b =>
                {
                    b.HasOne("EduSync.Models.UserModel", "Instructor")
                        .WithMany("CourseModels")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_CourseModel_UserModel1");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EduSync.Models.EnrollmentModel", b =>
                {
                    b.HasOne("EduSync.Models.CourseModel", "Course")
                        .WithMany("EnrollmentModels")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_EnrollmentModel_CourseModel1");

                    b.HasOne("EduSync.Models.UserModel", "User")
                        .WithMany("EnrollmentModels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_EnrollmentModel_UserModel1");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduSync.Models.ResultModel", b =>
                {
                    b.HasOne("EduSync.Models.AssessmentModel", "Assessment")
                        .WithMany("ResultModels")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ResultModel_AssessmentModel");

                    b.HasOne("EduSync.Models.UserModel", "User")
                        .WithMany("ResultModels")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ResultModel_UserModel");

                    b.Navigation("Assessment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EduSync.Models.AssessmentModel", b =>
                {
                    b.Navigation("ResultModels");
                });

            modelBuilder.Entity("EduSync.Models.CourseModel", b =>
                {
                    b.Navigation("AssessmentModels");

                    b.Navigation("EnrollmentModels");
                });

            modelBuilder.Entity("EduSync.Models.UserModel", b =>
                {
                    b.Navigation("CourseModels");

                    b.Navigation("EnrollmentModels");

                    b.Navigation("ResultModels");
                });
#pragma warning restore 612, 618
        }
    }
}
